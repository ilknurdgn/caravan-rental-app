{"id":"../node_modules/refractor/lang/csharp.js","dependencies":[{"name":"/Users/adc/Developer/ayrton/react-key-handler/node_modules/refractor/package.json","includedInParent":true,"mtime":499162500000},{"name":"/Users/adc/Developer/ayrton/react-key-handler/package.json","includedInParent":true,"mtime":1535648238901},{"name":"/Users/adc/Developer/ayrton/react-key-handler/.babelrc","includedInParent":true,"mtime":1535642334213}],"generated":{"js":"'use strict'\n\nmodule.exports = csharp\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['dotnet']\nfunction csharp(Prism) {\n  Prism.languages.csharp = Prism.languages.extend('clike', {\n    keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n    string: [\n      {\n        pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n        greedy: true\n      }\n    ],\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n  })\n  Prism.languages.insertBefore('csharp', 'class-name', {\n    'generic-method': {\n      pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n      inside: {\n        function: /^\\w+/,\n        'class-name': {\n          pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        keyword: Prism.languages.csharp.keyword,\n        punctuation: /[<>(),.:]/\n      }\n    },\n    preprocessor: {\n      pattern: /(^\\s*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight preprocessor directives as keywords\n        directive: {\n          pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.dotnet = Prism.languages.csharp\n}\n","map":{"mappings":[{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/refractor/lang/csharp.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"../node_modules/refractor/lang/csharp.js":"'use strict'\n\nmodule.exports = csharp\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['dotnet']\nfunction csharp(Prism) {\n  Prism.languages.csharp = Prism.languages.extend('clike', {\n    keyword: /\\b(?:abstract|add|alias|as|ascending|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|descending|do|double|dynamic|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|from|get|global|goto|group|if|implicit|in|int|interface|internal|into|is|join|let|lock|long|namespace|new|null|object|operator|orderby|out|override|params|partial|private|protected|public|readonly|ref|remove|return|sbyte|sealed|select|set|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|value|var|virtual|void|volatile|where|while|yield)\\b/,\n    string: [\n      {\n        pattern: /@(\"|')(?:\\1\\1|\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*?\\1/,\n        greedy: true\n      }\n    ],\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=\\s+\\w+)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern: /((?:\\b(?:class|interface|new)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)f?/i\n  })\n  Prism.languages.insertBefore('csharp', 'class-name', {\n    'generic-method': {\n      pattern: /\\w+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/,\n      inside: {\n        function: /^\\w+/,\n        'class-name': {\n          pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        keyword: Prism.languages.csharp.keyword,\n        punctuation: /[<>(),.:]/\n      }\n    },\n    preprocessor: {\n      pattern: /(^\\s*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        // highlight preprocessor directives as keywords\n        directive: {\n          pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.dotnet = Prism.languages.csharp\n}\n"},"lineCount":85}},"hash":"494548882f949aef4ab4d22acf3bba4a","cacheData":{"env":{}}}